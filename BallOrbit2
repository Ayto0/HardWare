local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local spheres = {}  -- Store created spheres here

local function CreateFloatingSphere(parent, offset)
    local sphere = Instance.new("Part")
    sphere.Size = Vector3.new(3.5, 3.5, 3.5)
    sphere.Shape = Enum.PartType.Ball
    sphere.BrickColor = BrickColor.new("Turquoise")
    sphere.Anchored = true
    sphere.CanCollide = false
    sphere.Transparency = 0.1
    sphere.Material = Enum.Material.Neon
    sphere.Parent = parent

    local function UpdatePosition()
        local rotation = CFrame.Angles(0, tick() * 1, 0)  -- Adjust the rotation speed
        local radius = 18  -- Adjust the radius of the circle
        local angle = math.rad(offset + (360 / #spheres) * (tick() * 3.5 % 360))  -- Adjust rotation speed
        local x = humanoidRootPart.Position.x + radius * math.cos(angle)
        local z = humanoidRootPart.Position.z + radius * math.sin(angle)
        local newPosition = Vector3.new(x, humanoidRootPart.Position.y + 0, z)
        sphere.CFrame = CFrame.new(newPosition) * rotation
    end

    local connection
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        UpdatePosition()
    end)

    sphere.AncestryChanged:Connect(function(_, parent)
        if not parent then
            connection:Disconnect()
        end
    end)

    return sphere
end

local numSpheres = 10  -- Adjust the number of spheres
for i = 1, numSpheres do
    local offset = (i - 1) * (360 / numSpheres)
    local sphere = CreateFloatingSphere(game.Workspace, offset)
    table.insert(spheres, sphere)
end
