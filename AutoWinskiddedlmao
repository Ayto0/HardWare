			local Player = game.Players.LocalPlayer
			local Character = Player.Character or Player.CharacterAdded:Wait()
			local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
			local Humanoid = Character:WaitForChild("Humanoid")
			
			local TweenService = game:GetService("TweenService")
			local RunService = game:GetService("RunService")
			
			local AutomaticWin = false
			local ChaseSpeedValue = 15
			
			
			function GetRemote(Tab)
				for i, v in pairs(Tab) do
					if v == "Client" then
						return Tab[i + 1]
					end
				end
				return ""
			end
			
			local Bedwars = {
				["ClientHandlerStore"] = require(Player.PlayerScripts.TS.ui.store).ClientStore
			}
			
			
			local IsNetworkOwner = isnetworkowner or (gethiddenproperty and function(part)
				if gethiddenproperty(part, "NetworkOwnershipRule") == Enum.NetworkOwnership.Manual then 
					return false
				end
				return true
			end) or function() return true end
			
			function GetMatchState()
				return Bedwars["ClientHandlerStore"]:getState().Game.matchState
			end
			
			function ChatMakeSystemMessage(Message)
				game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
					Text = Message,
					Font = Enum.Font.FredokaOne,
					TextSize = 20,
					Color = Color3.new(0, 1, 0)
				})
			end
			
			
			function KillHumanoid(Time)
				task.wait(Time)
				if Player.leaderstats.Bed.Value == "✅" then
					Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
					Player.Character.Humanoid.Health = 0
					game:GetService("ReplicatedStorage").rbxts_include.node_modules["@rbxts"].net.out._NetManaged.ResetCharacter:FireServer()
				end
			end
			
			function FindNearestPlayer()
				local NearestPlayer
				local NearestDistance = math.huge
				for i, v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v ~= Player and v.Team ~= Player.Team and v.Character.Humanoid.Health > 0 then
						local Distance = (v.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
						if Distance < NearestDistance then
							NearestPlayer = v
							NearestDistance = Distance
						end
					end
				end
				return NearestPlayer, NearestDistance
			end
			
			function FindNearestBed()
				local NearestBed = nil
				local MinDistance = math.huge
				for _,v in pairs(game.Workspace:GetDescendants()) do
					if v.Name:lower() == "bed" and v:FindFirstChild("Covers") and v:FindFirstChild("Covers").BrickColor ~= Player.Team.TeamColor then
						local Distance = (v.Position - Player.Character.HumanoidRootPart.Position).Magnitude
						if Distance < MinDistance then
							NearestBed = v
							MinDistance = Distance
						end
					end
				end
				return NearestBed
			end
			
			function TweenToNearestPlayer(NearestPlayer)
				if NearestPlayer then
					local TweenTime = 0.65
					local TweenInformation = TweenInfo.new(TweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
					local PlayerTween = TweenService:Create(Player.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestPlayer.Character.HumanoidRootPart.CFrame})
					if NearestPlayer.Character.Humanoid.Health > 0 then
						PlayerTween:Play()
					end
				end
			end
			
			function TweenToNearestPlayerSlow(NearestPlayer)
				if NearestPlayer then
					local TweenTime = (HumanoidRootPart.Position - NearestPlayer.Character.HumanoidRootPart.Position).Magnitude / 23.4 / ChaseSpeedValue
					local TweenInformation = TweenInfo.new(TweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
					local PlayerTween = TweenService:Create(Player.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestPlayer.Character.HumanoidRootPart.CFrame})
					if NearestPlayer.Character.Humanoid.Health > 0 then
						PlayerTween:Play()
					end
					if not PlayerTween.Completed then
						KillHumanoid(0)
					end
				end
			end
			
			function TweenToNearestBed()
				local NearestBed = FindNearestBed()
				if NearestBed then
					local TweenTime = 0.65
					local TweenInformation = TweenInfo.new(TweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
					local BedTween = TweenService:Create(Player.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestBed.CFrame + Vector3.new(0, 10, 0)})
					BedTween:Play()
					repeat
						task.wait()
						if not BedTween.Completed then
							KillHumanoid(0)
						end
					until BedTween.Completed or Player.CharacterAdded
				end
			end
			
			function AutoWin()
				Player.CharacterAdded:Connect(function()
					task.wait(0.3)
					local NearestBed = FindNearestBed()
					local TeamOfBedPlayer = nil
					if NearestBed and AutomaticWin == true and GetMatchState() == 1 and Player.leaderstats.Bed.Value == "✅" then		
						TweenToNearestBed()			
						local TeamColor = NearestBed:FindFirstChild("Covers").BrickColor
						for i, v in pairs(game.Players:GetChildren()) do
							if v.Team ~= Player.Team and v ~= Player then
								if v.TeamColor == TeamColor then
									TeamOfBedPlayer = v
								end
							end
						end
			
						repeat
							task.wait()
							if not TeamOfBedPlayer then
								task.wait(4)
								KillHumanoid(0)
							end
							if not IsNetworkOwner(Player.Character.HumanoidRootPart) then
								KillHumanoid(0)
							end
							if TeamOfBedPlayer then
								if TeamOfBedPlayer.leaderstats.Bed.Value ~= "✅" then
									KillHumanoid(0)
								end
							end
						until TeamOfBedPlayer.leaderstats.Bed.Value ~= "✅" or Player.Character.Humanoid.Health <= 0
						KillHumanoid(0)
			
					else
						if not FindNearestBed() and AutomaticWin == true and GetMatchState() == 1 and Player.leaderstats.Bed.Value == "✅" then
							local NearestPlayer = FindNearestPlayer()
							local KillsValue = Player.leaderstats.Kills.Value
			
							local Number = 0
			
							if NearestPlayer then
								TweenToNearestPlayer(NearestPlayer)
								task.wait(0.7)
							end
			
							if not IsNetworkOwner(Player.Character.HumanoidRootPart) then
								KillHumanoid(0)
							end
			
							repeat
								if NearestPlayer and KillsValue <= Player.leaderstats.Kills.Value and Number < 20 then
									task.wait(1)
									TweenToNearestPlayerSlow(NearestPlayer)
									Number = Number + 1
								else
									if KillsValue < Player.leaderstats.Kills.Value then
										KillHumanoid(0)
									end
								end
								if not IsNetworkOwner(Player.Character.HumanoidRootPart) then
									KillHumanoid(0)
								end
								if not NearestPlayer or Number >= 20 then
									KillHumanoid(0)
								end
							until Player.leaderstats.Kills.Value ~= KillsValue or Player.Character.Humanoid.Health <= 0 or not NearestPlayer
							KillHumanoid(0)
						end
					end
				end)
				RunService.Heartbeat:Connect(function()
					if AutomaticWin == true and Character and Humanoid.Health > 0 and FindNearestBed() and GetMatchState() == 1 then
						KillHumanoid(0)
					end
				end)
			end
			
			AutomaticWin = true
			AutoWin()
		end
	end
end)
