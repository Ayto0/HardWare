			local player = game.Players.LocalPlayer
			local character = player.Character
			
			if character then
				local ballCount = 8
				local ballRadius = 1
				local ballDistance = 10  -- Adjust the distance from the character
			
				local balls = {}  -- Store references to the created balls
			
				for i = 1, ballCount do
					local ball = Instance.new("Part")
					ball.Shape = Enum.PartType.Ball
					ball.Size = Vector3.new(ballRadius * 2, ballRadius * 2, ballRadius * 2)
					ball.Anchored = true
					ball.CanCollide = false
					ball.BrickColor = BrickColor.Black()
					ball.Transparency = 0.5
					ball.Parent = workspace
			
					local angle = (i - 1) * (360 / ballCount)  -- Calculate the angle
					local radians = math.rad(angle)
					local offsetX = math.sin(radians) * ballDistance
					local offsetY = math.cos(radians) * ballDistance
					balls[i] = {ball = ball, offsetX = offsetX, offsetY = offsetY}
				end
			
				while true do
					local currentTime = tick()
			
					for i = 1, ballCount do
						local ballData = balls[i]
						local ball = ballData.ball
			
						local rotationAngle = currentTime * (i / ballCount) * 2 * math.pi  -- Rotate at different speeds
			
						local offsetX = math.cos(rotationAngle) * ballData.offsetX
						local offsetY = math.sin(rotationAngle) * ballData.offsetY
			
						local targetPosition = character.HumanoidRootPart.Position + Vector3.new(offsetX, 0, offsetY)
						ball.Position = ball.Position:Lerp(targetPosition, 0.1)
					end
			
					wait()
